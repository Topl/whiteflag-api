{
    "openapi": "3.0.1",
    "info": {
        "title": "Whiteflag API",
        "version": "1.0.0-alpha.3-dev",
        "description": "This Whiteflag Application Programming Interface (API) is a [Node.js](https://nodejs.org/en/about/) software implementation of the API layer that provides an interface with the Whiteflag messaging network on one or more underlying blockchains. It acts as a message transceiver between one or more blockchains and one or more end-user applications.\n\nThis API is a so called Minumum Viable Product (MVP), which means that it only supports the core features of the Whiteflag protocol for development and testing purposes. As such, it serves as the reference implementation of the Whiteflag protocol, but it is not designed and tested for secure usage and performance in a production environment.\n\nTwo methods are available for interaction with the API: 1. a [REST API](https://en.wikipedia.org/wiki/Representational_state_transfer) for originators to provide Whiteflag message to be sent on the blockchain, and 2. a [web socket](https://en.wikipedia.org/wiki/WebSocket) available on `/socket` based on [socket.io](https://socket.io/) for clients to listen for incoming Whiteflag messages from a blockchain. A webpage with embedded socket listener is available on [/listen](/listen).\n\nThis definition documents the API in [OpenAPI format](https://swagger.io/specification/). The following JSON schemas and specifications are used by this API definition and available with the links below:\n* [Whiteflag Protocol specification](protocol/whiteflag.standard.html)\n* [Whiteflag Protocol message schema](protocol/message.schema.json)\n* [Whiteflag API message metaheader schema](protocol/metaheader.schema.json)\n* [Whiteflag API state schema](protocol/state.schema.json)\n\nAll response bodies are structured as `{meta, data, errors}`, based on the [JSON API Specification](https://jsonapi.org/format/), which has been used as a guideline (and as a guideline only).",
        "x-logo": {
            "url": "wflogo.png",
            "altText": "Whiteflag"
        }
    },
    "tags": [
        {
            "name": "Messages",
            "description": "Endpoints for operations on Whiteflag messages, such as retrieval, sending, encoding, decoding and validation"
        },
        {
            "name": "Blockchains",
            "description": "Endpoints for operations related to a specific blockchain and blockchain accounts, such as blockchain information settings, account information and authentication signatures"
        },
        {
            "name": "Accounts",
            "description": "Endpoints for operations related to a specific blockchain accounts, such as creating, updating and deleting accounts"
        },
        {
            "name": "Signatures",
            "description": "Endpoints for operations on Whiteflag authentication signatures, such as creation and validation"
        },
        {
            "name": "Originators",
            "description": "Endpoints for operations on Whiteflag originators, such as authentication and management of shared secrets"
        },
        {
            "name": "State",
            "description": "Endpoints for operations on the Whiteflag state of the running API instance"
        }
    ],
    "servers": [
        {
            "url": "http://{hostname}:{port}/",
            "variables": {
                "hostname": {
                    "default": "localhost",
                    "description": "Configurable hostname"
                },
                "port": {
                    "default": "5746",
                    "description": "Configurable port number"
                }
            }
        }
    ],
    "security": [
        {
            "description": "Basic HTTP authorization",
            "type": "http",
            "scheme": "basic"
        }
    ],
    "paths": {
        "/messages": {
            "get": {
                "tags": [ "Messages" ],
                "description": "Returns an array of messages from the primary datastore.",
                "operationId": "getMessages",
                "parameters": [
                    { "$ref": "#/components/parameters/transactionHash" },
                    { "$ref": "#/components/parameters/blockchain" }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfMessages"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            }
        },
        "/messages/send": {
            "post": {
                "tags": [ "Messages" ],
                "description": "Transmits a Whiteflag message on a blockchain and returns the result. This operation may be disabled in the configuration.",
                "operationId": "sendMessage",
                "requestBody": {
                    "$ref": "#/components/requestBodies/wfMessage"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfMessage"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    },
                    "503": {
                        "$ref": "#/components/responses/error503"
                    }
                }
            }
        },
        "/messages/receive": {
            "post": {
                "tags": [ "Messages" ],
                "description": "Accepts a Whiteflag message as if received from a blockchain. Normally only used for testing. This operation may be disabled in the configuration.",
                "operationId": "receiveMessage",
                "requestBody": {
                    "$ref": "#/components/requestBodies/wfMessageEncoded"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfMessage"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    }
                }
            }
        },
        "/messages/encode": {
            "post": {
                "tags": [ "Messages" ],
                "description": "Encodes a Whiteflag message and returns the result.",
                "operationId": "encodeMessage",
                "requestBody": {
                    "$ref": "#/components/requestBodies/wfMessage"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfMessage"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    }
                }
            }
        },
        "/messages/decode": {
            "post": {
                "tags": [ "Messages" ],
                "description": "Decodes a Whiteflag message and returns the result.",
                "operationId": "decodeMessage",
                "requestBody": {
                    "$ref": "#/components/requestBodies/wfMessageEncoded"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfMessage"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    }
                }
            }
        },
        "/messages/validate": {
            "post": {
                "tags": [ "Messages" ],
                "description": "Validates the format and reference of a Whiteflag message and returns the result.",
                "operationId": "validateMessage",
                "requestBody": {
                    "$ref": "#/components/requestBodies/wfMessage"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfMessages"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            }
        },
        "/messages/references": {
            "get": {
                "tags": [ "Messages" ],
                "description": "Returns an array of all Whiteflag messages referencing the message with the given transaction hash.",
                "operationId": "getMessageReferences",
                "parameters": [
                    { "$ref": "#/components/parameters/transactionHash" }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfMessages"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    },
                    "503": {
                        "$ref": "#/components/responses/error503"
                    }
                }
            }
        },
        "/messages/sequence": {
            "get": {
                "tags": [ "Messages" ],
                "description": "Returns an array with the Whiteflag messages in a sequence starting with the message with the given transaction hash.",
                "operationId": "getMessageSequence",
                "parameters": [
                    { "$ref": "#/components/parameters/transactionHash" }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfMessages"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    },
                    "503": {
                        "$ref": "#/components/responses/error503"
                    }
                }
            }
        },
        "/blockchains": {
            "get": {
                "tags": [ "Blockchains", "State" ],
                "description": "Returns the full blockchain configuration and state.",
                "operationId": "getAllBlockchains",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/blockchainsState"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            }
        },
        "/blockchains/{blockchain}": {
            "get": {
                "tags": [ "Blockchains", "State" ],
                "description": "Returns the configuration and state of the specified blockchain.",
                "operationId": "getBlockchainState",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/blockchainState"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            }
        },
        "/blockchains/{blockchain}/accounts": {
            "get": {
                "tags": [ "Blockchains", "Accounts", "State" ],
                "description": "Returns the accounts of the specified blockchain.",
                "operationId": "getAccounts",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/blockchainAccounts"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            },
            "post": {
                "tags": [ "Blockchains", "Accounts" ],
                "description": "Creates a new blockchain account. This operation may be disabled in the configuration.",
                "operationId": "createAccount",
                "requestBody": {
                    "$ref": "#/components/requestBodies/createAccount"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/blockchainAccountCreated"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    },
                    "503": {
                        "$ref": "#/components/responses/error503"
                    }
                }
            }
        },
        "/blockchains/{blockchain}/accounts/{account}": {
            "get": {
                "tags": [ "Blockchains", "Accounts", "State" ],
                "description": "Returns the details of the specified blockchain account.",
                "operationId": "getAccount",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/blockchainAccount"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            },
            "patch": {
                "tags": [ "Blockchains", "Accounts" ],
                "description": "Updates or adds custom properties of the specified blockchain account. Please be carefull as all attributes can be changed, which may result in an unusable account. This operation may be disabled in the configuration.",
                "operationId": "updateAccount",
                "requestBody": {
                    "$ref": "#/components/requestBodies/updateAccount"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/blockchainAccount"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    },
                    "503": {
                        "$ref": "#/components/responses/error503"
                    }
                }
            },
            "delete": {
                "tags": [ "Blockchains", "Accounts" ],
                "description": "Deletes the specified blockchain account. Be carefull as all data will be unrecoverably lost. This operation may be disabled in the configuration.",
                "operationId": "deleteAccount",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/blockchainAccount"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    },
                    "503": {
                        "$ref": "#/components/responses/error503"
                    }
                }
            }
        },
        "/blockchains/{blockchain}/accounts/{account}/sign": {
            "post": {
                "tags": [ "Blockchains", "Accounts", "Signatures" ],
                "description": "Signs a Whiteflag authentication payload for the blockchain address specified in the payload and returns the resulting signature. This operation may be disabled in the configuration.",
                "operationId": "createSignature",
                "requestBody": {
                    "$ref": "#/components/requestBodies/wfSignaturePayload"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfSignature"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    },
                    "503": {
                        "$ref": "#/components/responses/error503"
                    }
                }
            }
        },
        "/blockchains/{blockchain}/accounts/{account}/transfer": {
            "post": {
                "tags": [ "Blockchains", "Accounts" ],
                "description": "Transfers value to another blockchain account. This operation may be disabled in the configuration.",
                "operationId": "transferValue",
                "requestBody": {
                    "$ref": "#/components/requestBodies/transferValue"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/transferValue"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    },
                    "503": {
                        "$ref": "#/components/responses/error503"
                    }
                }
            }
        },
        "/originators": {
            "get": {
                "tags": [ "Originators", "State" ],
                "description": "Returns known details of all Whiteflag originators.",
                "operationId": "getAllOriginators",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/originatorsState"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            }
        },
        "/originators/{address}": {
            "get": {
                "tags": [ "Originators", "State" ],
                "description": "Returns the details of the specified Whiteflag originator.",
                "operationId": "getOriginator",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/originatorState"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            }
        },
        "/originators/{address}/psk/{account}": {
            "get": {
                "tags": [ "Originators", "State" ],
                "description": "Checks for existence of a pre-shared key for the specified Whiteflag originator to be used with the specified blockchain account. This operation may be disabled in the configuration.",
                "operationId": "getPreSharedKey",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/originatorPsk"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            },
            "put": {
                "tags": [ "Originators", "State" ],
                "description": "Stores or updates a pre-shared key for the specified Whiteflag originator to be used with the specified blockchain account. This operation may be disabled in the configuration.",
                "operationId": "storePreSharedKey",
                "requestBody": {
                    "$ref": "#/components/requestBodies/storePreSharedKey"
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/originatorPskPut"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            },
            "delete": {
                "tags": [ "Originators", "State" ],
                "description": "Deletes a pre-shared key for the specified Whiteflag originator to be used with the specified blockchain account. This operation may be disabled in the configuration.",
                "operationId": "deletePreSharedKey",
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/originatorPskDeleted"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            }
        },
        "/signature/decode": {
            "post": {
                "tags": [ "Signatures" ],
                "description": "Decodes a Whiteflag authentication signature.",
                "operationId": "decodeSignature",
                "requestBody": {
                    "$ref": "#/components/requestBodies/wfSignature"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfSignatureDecoded"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            }
        },
        "/signature/verify": {
            "post": {
                "tags": [ "Signatures" ],
                "description": "Verifies a Whiteflag authentication signature.",
                "operationId": "verifySignature",
                "requestBody": {
                    "$ref": "#/components/requestBodies/wfExtSignature"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/wfSignatureDecoded"
                    },
                    "400": {
                        "$ref": "#/components/responses/error400"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    },
                    "501": {
                        "$ref": "#/components/responses/error501"
                    },
                    "503": {
                        "$ref": "#/components/responses/error503"
                    }
                }
            }
        },
        "/queues/{queue}": {
            "get": {
                "tags": [ "State" ],
                "description": "Returns the requested queue from the Whiteflag state.",
                "operationId": "getQueue",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/queueState"
                    },
                    "404": {
                        "$ref": "#/components/responses/error404"
                    },
                    "500": {
                        "$ref": "#/components/responses/error500"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "blockchainName": {
                "description": "The name of a blockchain",
                "name": "blockchain",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "blockchainAccount": {
                "description": "The address identifying a blockchain account",
                "name": "account",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "originatorAddress": {
                "description": "The address identifying an originator",
                "name": "address",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "queueName": {
                "description": "The name of a queue",
                "name": "queue",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "transactionHash": {
                "description": "The hash of a blockchain transaction",
                "name": "transactionHash",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "blockchain": {
                "description": "The name of a blockchain",
                "name": "blockchain",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "wfMessage": {
                "title": "Whiteflag Message",
                "description": "Whiteflag message with MetaHeader as used by the API",
                "version": "1",
                "type": "object",
                "required": [ "MetaHeader", "MessageHeader", "MessageBody" ],
                "additionalProperties": false,
                "properties": {
                    "MetaHeader": {
                        "$ref": "protocol/metaheader.schema.json"
                    },
                    "MessageHeader": {
                        "$ref": "protocol/message.schema.json#/properties/MessageHeader"
                    },
                    "MessageBody": {
                        "$ref": "protocol/message.schema.json#/properties/MessageBody"
                    }
                }
            },
            "responseBodyMetaObject": {
                "title": "API response metadata",
                "description": "Meta data about the processing of the request",
                "type": "object",
                "properties": {
                    "additionalProperties": true,
                    "operationId": {
                        "description": "Unique string defined by the OpenAPI defintion used to identify the operation",
                        "type": "string"
                    },
                    "request": {
                        "description": "Details of the request on the endpoint",
                        "type": "object",
                        "properties": {
                            "client": {
                                "description": "The ip address of the client that made the request",
                                "type": "string"
                            },
                            "method": {
                                "description": "The HTTP method used to make the request",
                                "type": "string"
                            },
                            "endpoint": {
                                "description": "The endpoint on which the request has been made",
                                "type": "string"
                            }
                        }
                    },
                    "info": {
                        "description": "Information about how the data was processed",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "warnings": {
                        "description": "Warnings generated when processing the request",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "description": "Errors generated when processing the request",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "responseBodyErrorObject": {
                "title": "API response errors",
                "description": "Errors describing why the request could not succesfully be fulfilled",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "responseBodyErrors": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/responseBodyMetaObject"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/responseBodyErrorObject"
                    }
                }
            }
        },
        "requestBodies": {
            "wfMessage": {
                "description": "Whiteflag message to be send, encoded/ecrypted, or validated",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/wfMessage"
                        }
                    }
                }
            },
            "wfMessageEncoded": {
                "description": "Whiteflag message to be decoded/decrypted",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "MetaHeader": {
                                    "$ref": "protocol/metaheader.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "wfSignature": {
                "description": "Whiteflag Authentication Signature",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "protocol/signature.schema.json#/definitions/wfSignature"
                        }
                    }
                }
            },
            "wfSignaturePayload": {
                "description": "Payload for a Whiteflag Authentication Signature",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "protocol/signature.schema.json#/definitions/wfSignaturePayload"
                        }
                    }
                }
            },
            "wfExtSignature": {
                "description": "Request to verify a Whiteflag Authentication Signature",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "protocol/signature.schema.json#/definitions/wfExtSignature"
                        }
                    }
                }
            },
            "transferValue": {
                "description": "Request to transfer value to another blockchain account",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "Blockchain value transfer request body",
                            "description": "Blockchain value transfer request body",
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {
                                "fromAddress": {
                                    "description": "The address of the blockchain account to transfer value from",
                                    "type": "string"
                                },
                                "toAddress": {
                                    "description": "The address of the blockchain account to transfer value to",
                                    "type": "string"
                                },
                                "value": {
                                    "description": "Value to be transferred in the main currency of the blockchain",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "createAccount": {
                "description": "Request to create blockchain account",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Blockchain account creation data object",
                            "type": "object",
                            "properties": {
                                "privateKey": {
                                    "description": "Optional private key in raw hexadecimal format to create account with",
                                    "type": "string",
                                    "pattern": "[a-fA-F0-9]"
                                }
                            }
                        }
                    }
                }
            },
            "updateAccount": {
                "description": "Request to update blockchain account",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "protocol/state.schema.json#/definitions/blockchainAccountObject"
                        }
                    }
                }
            },
            "deleteAccount": {
                "description": "Request to delete blockchain account",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Blockchain account deletion data object",
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {}
                        }
                    }
                }
            },
            "storePreSharedKey": {
                "description": "Request to store a pre-shared key for an originator",
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Pre-shared key data object",
                            "type": "object",
                            "properties": {
                                "preSharedKey": {
                                    "description": "A pre-shared key in raw hexadecimal format",
                                    "type": "string",
                                    "pattern": "[a-fA-F0-9]"
                                }
                            }
                        }
                    }
                }
            }
        },
        "responses": {
            "error400": {
                "description": "Invalid request, typically because of a malformed syntax or protocol error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/responseBodyErrors"
                        }
                    }
                }
            },
            "error401": {
                "description": "Authentication is required and was either not provided or has failed",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/responseBodyErrors"
                        }
                    }
                }
            },
            "error404": {
                "description": "Requested resource not found or no data available",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/responseBodyErrors"
                        }
                    }
                }
            },
            "error500": {
                "description": "Internal error preventing the running API instance to process the request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/responseBodyErrors"
                        }
                    }
                }
            },
            "error501": {
                "description": "Function not implemented, such as a missing protocol feature or not implemented blockchain",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/responseBodyErrors"
                        }
                    }
                }
            },
            "error503": {
                "description": "Function currently not available, such as a blockchain connection that is not enabled",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/responseBodyErrors"
                        }
                    }
                }
            },
            "wfMessage": {
                "description": "Succesfully processed the Whiteflag message and returning the message with updated MetaHeader",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "#/components/schemas/wfMessage"
                                }
                            }
                        }
                    }
                }
            },
            "wfMessages": {
                "description": "Successfully processed Whiteflag message query and returning an array of messages",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "description": "Array with resulting messages from a database query",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/wfMessage"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "wfSignature": {
                "description": "Succesfully processed the Whiteflag authentication signature and returning the result",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/signature.schema.json#/definitions/wfSignature"
                                }
                            }
                        }
                    }
                }
            },
            "wfSignatureDecoded": {
                "description": "Succesfully processed the Whiteflag authentication signature and returning the result",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/signature.schema.json#/definitions/wfSignatureDecoded"
                                }
                            }
                        }
                    }
                }
            },
            "blockchainsState": {
                "description": "Successfully retrieved and returning all blockchain configurations and states",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/state.schema.json#/properties/blockchains"
                                }
                            }
                        }
                    }
                }
            },
            "blockchainState": {
                "description": "Successfully retrieved and returning the blockchain configuration and state",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/state.schema.json#/definitions/blockchainObject"
                                }
                            }
                        }
                    }
                }
            },
            "blockchainAccounts": {
                "description": "Successfully retrieved and returning all blockchain accounts",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "description": "Blockchain accounts",
                                    "type": "array",
                                    "items": {
                                        "$ref": "protocol/state.schema.json#/definitions/blockchainAccountObject"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "blockchainAccountCreated": {
                "description": "Successfully created the blockchain account, and returning account data",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/state.schema.json#/definitions/blockchainAccountObject"
                                }
                            }
                        }
                    }
                }
            },
            "blockchainAccount": {
                "description": "Successfully retrieved, updated or deleted the blockchain account, and returning account data",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/state.schema.json#/definitions/blockchainAccountObject"
                                }
                            }
                        }
                    }
                }
            },
            "transferValue": {
                "description": "Successfully transferred value to another blockchain account and returning the transaction hash",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "description": "Value transfer result",
                                    "type": "object",
                                    "properties": {
                                        "transactionHash": {
                                            "description": "The transaction hash of the value transfer",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "originatorsState": {
                "description": "Successfully retrieved and returning known Whiteflag originators",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/state.schema.json#/properties/originators"
                                }
                            }
                        }
                    }
                }
            },
            "originatorState": {
                "description": "Successfully retrieved and returning known Whiteflag originators",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/state.schema.json#/definitions/originatorObject"
                                }
                            }
                        }
                    }
                }
            },
            "originatorPsk": {
                "description": "A pre-shared key for the Whiteflag originator is available",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/state.schema.json#/definitions/originatorObject"
                                }
                            }
                        }
                    }
                }
            },
            "originatorPskPut": {
                "description": "Successfully accepted new or updated pre-shared key for the Whiteflag originator",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/state.schema.json#/definitions/originatorObject"
                                }
                            }
                        }
                    }
                }
            },
            "originatorPskDeleted": {
                "description": "Successfully accepted the delete request for the pre-shared key for the Whiteflag originators",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "$ref": "protocol/state.schema.json#/definitions/originatorObject"
                                }
                            }
                        }
                    }
                }
            },
            "queueState": {
                "description": "Successfully retrieved and returning the queue of the running API instance",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/responseBodyMetaObject"
                                },
                                "data": {
                                    "oneOf": [
                                        { "$ref": "protocol/state.schema.json#/properties/queue/properties/initVectors" },
                                        { "$ref": "protocol/state.schema.json#/properties/queue/properties/blockDepths" }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
